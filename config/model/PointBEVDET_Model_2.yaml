_target_: cross_view_transformer.model.PointBEV.PointBEVDET

outputs:
  bev: [0, 1]
  ped: [1, 2]

dim_last: 128
sparse: False
num_groups: 1
new: False

backbone:
  _target_: cross_view_transformer.model.backbones.timm_backbones.ResNet50
  out_indices: [1,2,3,4]
  fpn: True

  image_height: ${data.image.h}
  image_width: ${data.image.w}

  # freeze_layers: [layer1]
  embed_dims: 128

# bev_encoder:
#   _target_: cross_view_transformer.model.PointBEV.PointBEV_Encoder

#   mode: box
  
bev_encoder:
  _target_: cross_view_transformer.model.PointBEV.SparseMaskHead

  num_anchor: 50
  num_points: 2500
  mode: box
  num_groups: ${model.num_groups}
 
  # bev
  sampling_kwargs:
    embed_dims: 128
    num_points_in_pillar: 8
    pc_range: [-49.75, -49.75, -3.375, 49.75, 49.75, 5.375]
    img_h: ${data.image.h}
    img_w: ${data.image.w}

  grid_kwargs:
    H: 200
    W: 200
    Z: 8
    num_points_in_pillar: 8

# box_encoder:
#   _target_: cross_view_transformer.model.sparsebev.SparseHead

#   embed_dims: 128
#   query_type: box

#   # box
#   pc_range: [-49.75, -49.75, -3.375, 49.75, 49.75, 5.375]
#   num_classes: 8
#   num_query: 400
#   num_reg_fcs: 2
#   num_points_in_pillar: 1

#   transformer:
#     _target_: cross_view_transformer.model.sparsebev.SparseBEVTransformerDecoder
    
#     n_layer: 4
#     num_groups: ${model.num_groups}

#     num_points_in_pillar: ${model.box_encoder.num_points_in_pillar}
#     embed_dims: ${model.box_encoder.embed_dims}
#     pc_range: ${model.box_encoder.pc_range}
#     num_levels: 4
#     h: ${data.image.h}
#     w: ${data.image.w}
#     num_points: 8
#     checkpointing: True
#     query_type: box

unet:
  # _target_: cross_view_transformer.model.sparse_resnet.SparseUNet

  # in_c: ${model.dim_last}
  # out_c: ${model.dim_last}

  _target_: cross_view_transformer.model.decoder.BEVUNet

  dim: 128
  num_blocks: 3