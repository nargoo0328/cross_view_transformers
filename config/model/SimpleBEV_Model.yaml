_target_: cross_view_transformer.model.sparsebev_seg.SparseBEVSeg

backbone:
  _target_: cross_view_transformer.model.backbones.efficientnet.EfficientNet_PointBEV
  image_height: ${data.image.h}
  image_width: ${data.image.w}

neck:
  _target_: cross_view_transformer.model.backbones.agp.AGPNeck

  align_res_layer:
    _target_: cross_view_transformer.model.backbones.agp.AlignRes
    mode: "upsample"
    scale_factors: [1, 2]

  prepare_c_layer:
    _target_: cross_view_transformer.model.backbones.agp.PrepareChannel

    in_channels: [56, 160]
    mode: "doubleconv"
    tail_mode: "conv2d"
  
  list_output: True

encoder:
  _target_: cross_view_transformer.model.simple_bev.SimpleBEVHead

  embed_dims: 128

  # bev
  H: 200
  W: 200
  Z: 8
  num_points_in_pillar: 8

  transformer:
    _target_: cross_view_transformer.model.simple_bev.SimpleBEVDecoder
    
    num_groups: 1
    pc_range: [-50.0, -50.0, -4.0, 50.0, 50.0, 4.0] # [-49.75, -49.75, -3.375, 49.75, 49.75, 5.375]

    embed_dims: ${model.encoder.embed_dims}
    h: ${data.image.h}
    w: ${data.image.w}
    num_points: 8

decoder:
  _target_: cross_view_transformer.model.decoder.SimpleBEVDecoder
  in_channels: ${model.encoder.embed_dims}

head:
  _target_: cross_view_transformer.model.decoder.SegHead

  dim_last: ${model.encoder.embed_dims}
  multi_head: True

  outputs:
    VEHICLE: [0, 1]
    center: [1, 2]
    offset: [2, 4]