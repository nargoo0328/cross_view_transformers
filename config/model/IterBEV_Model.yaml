_target_: cross_view_transformer.model.iterative_bev.SparseBEVSeg

backbone:
  _target_: cross_view_transformer.model.backbones.efficientnet.EfficientNet_PointBEV

  image_height: ${data.image.h}
  image_width: ${data.image.w}
  return_list: ["reduction_3", "reduction_4"]

neck:
  _target_: cross_view_transformer.model.backbones.agp.AGPNeck

  align_res_layer:
    _target_: cross_view_transformer.model.backbones.agp.AlignRes
    mode: "upsample"
    scale_factors: [1, 2]

  prepare_c_layer:
    _target_: cross_view_transformer.model.backbones.agp.PrepareChannel

    in_channels: [56, 160]
    mode: "doubleconv"
    tail_mode: "conv2d"

  list_output: True

encoder:
  _target_: cross_view_transformer.model.iterative_bev.BasicBEVUpdateEncoder

  embed_dims: 128
  num_iterations: 8
  seg_dims: 4
  
  head:
    _target_: cross_view_transformer.model.decoder.SegHead

    dim_last: ${model.encoder.embed_dims}
    multi_head: True

    outputs:
      VEHICLE: [0, 1]
      center: [1, 2]
      offset: [2, 4]

  sampling:
    _target_: cross_view_transformer.model.iterative_bev.BEVSampling

    embed_dims: ${model.encoder.embed_dims}
    pc_range: [-50.0, -50.0, -4.0, 50.0, 50.0, 4.0]
    img_h: ${data.image.h}
    img_w: ${data.image.w}

  # bev
  h: 200
  w: 200
  bev_h: 50
  bev_w: 50